前端训练营就要结束了，下面是我对必修课部分的一点学习总结。

同期的学员中有不少前端大佬，其他的同学即使不是高手，也都有多年的前端从业经验。我应该是一个例外，工作6年，基本都在后端，前端的经验极少，知识陈旧，眼界狭窄。本次训练营对其他同学来说，可能真的是一个“进阶”训练营，而对我来说，它更多的是带我见识了世面，开拓了我的眼界，让我第一次看到了繁华的前端世界的一角。

浏览器工作原理

这一章节主要讲解的是浏览器接收网页代码，解析处理，渲染布局，最终呈现到屏幕上的原理和过程。讲解的方法是从0开发一个toy-browser，自己实现一个包含基本功能的浏览器，以此加深对知识的理解。这也是后面一些章节的学习方法。

这章的一个重点是状态机，理解了这方面的知识，会发现解析html和css和原理和算法其实并不很复杂。这章对我来说有一个额外的挑战，就是一些对前端人员来说的常识，我都需要重新学起。我没用过vs code，不知道什么是node，ES5都没整明白，ES6新增的语法更是一窍不通。我不理解为什么一个依赖包可以在项目里安装，还可以在全局安装，还可以两处都安装。这两种安装有什么区别，是什么关系，版本号能不能不一致，和其它包相互依赖和调用的时候，又会是一种怎样的复杂关系。其中很多问题是我照搬后端的经验难以解决的，时至今日也还在努力理解的过程中。

重学JavaScript

这一章主要讲解JS，但和我预期的不同，并非像传统的课程那样按部分依次讲解语言的语法，而是通过开发toy-js，用JS实现一个JS解释器，来让“本来可能只了解JS语法”的学员进一步理解“JS引擎在解释和执行代码时的内部机制”。

除了学习到了这方面的知识外，本章还给予我的一个收获是，由于这个JS解释器也是用JS开发的，因此我可以通过老师的代码，学习到很多JS的语法、常用写法，包括一些ES6的语法。这些代码本身对于普通的前端开发者可能都司空见惯，但对我来说处处都是新东西。在训练营之前，我不知道什么是 let，const，而学习了一些课之后，我也渐渐能理解一些诸如Promise的语法了。事实上，必修课整篇课程都是在用JS写各种东西，因此对我来说一直是一个学习JS的过程。

组件化

这一章讲解了组件化相关的一些知识，又给我打开了新的大门。通过这一章，我知道了原来只要你想，前端有那么多东西是可以自己手写的。实现时间线的操作我真是想都没有想过。同时我也了解到，一些组件，比如轮播图，即使看着简单，但想要实现得比较完善，要考虑的方面也很多，工作量也很大。

工具链

这一章介绍了几种前端常用工具及其基本用法，对我来说，是一个密集给我开眼界见世面的过程。“脚手架”、“Webpack”这些词我之前都是听说过，没见过，不明其意，也不知道前端也要做单元测试。这一章使我初步了解了这些现代前端工具体系中的重要组成部分。

发布系统

这一章对我陈腐又稀薄的前端知识储备又是一个冲击。为什么前端要有发布系统，还分发布工具，发布服务器，线上服务器这么多个部分？不是前后端代码都在一个项目里，分属不同的文件夹，一起编译打包完上线就行了吗？我一边试图理解这些疑惑，一边跟着老师实现了发布系统的各个部分。同时这一章专门介绍了node中流的知识，不仅使一些操作更加简便，而且也已被很多包所使用，可以说是node必学的知识。

训练营给我展现了一个宏大的前端世界，让我知道了前端现在有这么多的知识和技术，可以分为这么多个部分和层面。如果我想继续学习，至少知道可以从哪些方面下手了。